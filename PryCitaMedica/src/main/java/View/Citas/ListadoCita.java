/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View.Citas;

import Controller.CitasController;
import Model.Citas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class ListadoCita extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListadoCita
     */
    public DefaultTableModel model2 = new DefaultTableModel();
    CitasController cita = CitasController.getinstancia();
    
    
    public ListadoCita() {
        initComponents();
        tbl_Turnos.setModel(model2);
        String [] Columnas = {"FECHA","HORA","CEDULA","NOMBRE","EDAD","MEDICO","ESPECIALISTA","OBSERVACIONES"};
        model2.setColumnIdentifiers(Columnas);
        ListaTurnos();
    }
    
    public void ListaTurnos()
    {
        for (Citas cita1 : cita.ListaTurnos()) {
            model2.addRow(new Object[] {cita1.getFecha(),cita1.getHora(),cita1.getPaciente().getCedula(),cita1.getPaciente().getNombre(),
            cita1.getPaciente().getEdad(),cita1.getMedico().getNombre(),cita1.getMedico().getEspecialidad().getEspecialidad(),
            cita1.getObserbaciones()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_BuscarCita = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Turnos = new javax.swing.JTable();
        btn_EliminarCita = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_EliminarTurno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_BuscarPorEspecialidad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_BuscarPorMedico = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_BuscarPorFecha = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setText("Listado de Turnos");

        jLabel2.setText("Buscar Turno Por Cedula Del Paciente");

        txt_BuscarCita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_BuscarCitaKeyReleased(evt);
            }
        });

        tbl_Turnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbl_Turnos);

        btn_EliminarCita.setText("ELIMINAR CITA");
        btn_EliminarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarCitaActionPerformed(evt);
            }
        });

        jLabel3.setText("Eliminar Turno Por Cedula Del paciente");

        jLabel4.setText("Buscar Turno Por Especialidad");

        txt_BuscarPorEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_BuscarPorEspecialidadKeyReleased(evt);
            }
        });

        jLabel5.setText("Buscar Turno Por Medico");

        txt_BuscarPorMedico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_BuscarPorMedicoKeyReleased(evt);
            }
        });

        jLabel6.setText("Buscar Turno Por Fecha");

        txt_BuscarPorFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_BuscarPorFechaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 936, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_BuscarCita, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(txt_BuscarPorEspecialidad)
                            .addComponent(txt_BuscarPorFecha))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_EliminarTurno)
                            .addComponent(txt_BuscarPorMedico))
                        .addGap(18, 18, 18)
                        .addComponent(btn_EliminarCita)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_BuscarCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_EliminarCita)
                    .addComponent(jLabel3)
                    .addComponent(txt_EliminarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_BuscarPorEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txt_BuscarPorMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_BuscarPorFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_BuscarCitaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BuscarCitaKeyReleased
        // TODO add your handling code here:
        model2.setRowCount(0);
        for (Citas citas : cita.ListadoTurnoPorCedula(txt_BuscarCita.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getHora(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getMedico().getEspecialidad().getEspecialidad(),
            citas.getObserbaciones()});
        }
    }//GEN-LAST:event_txt_BuscarCitaKeyReleased

    private void btn_EliminarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarCitaActionPerformed
        // TODO add your handling code here:
        /*int resultado = JOptionPane.showConfirmDialog(null, "ESTAS SEGURO QUE DESEAS ELIMINAR LA CITA","CONFIRMACION",JOptionPane.YES_NO_OPTION);
        if(resultado == JOptionPane.YES_OPTION)
        {
            int fila = tbl_Turnos.getSelectedRow();
            model2.removeRow(fila);
        }*/
        
        /*for (Citas citas : cita.EliminarCitaPorCedula(txt_EliminarTurno.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getHora(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getMedico().getEspecialidad(),
            citas.getObserbaciones()});
        }*/
        //tbl_Turnos.removeAll();
        model2.removeRow(0);
        if(cita.EliminarCitaPorCedula(txt_EliminarTurno.getText()).isEmpty())
        {
            model2.removeRow(0);
        }
        else
        {
            for (Citas citas : cita.EliminarCitaPorCedula(txt_EliminarTurno.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getHora(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getEspecialidad().getEspecialidad(),
            citas.getObserbaciones()});
            }
        }
        /*for (Citas citas : cita.EliminarCitaPorCedula(txt_BuscarCita.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getMedico().getEspecialidad(),
            citas.getObserbaciones()});
        }
        */
    }//GEN-LAST:event_btn_EliminarCitaActionPerformed

    private void txt_BuscarPorEspecialidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BuscarPorEspecialidadKeyReleased
        // TODO add your handling code here:
        model2.setRowCount(0);
        for (Citas citas : cita.ListadoTurnoPorEspecialidad(txt_BuscarPorEspecialidad.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getHora(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getEspecialidad().getEspecialidad(),
            citas.getObserbaciones()});
        }
    }//GEN-LAST:event_txt_BuscarPorEspecialidadKeyReleased

    private void txt_BuscarPorMedicoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BuscarPorMedicoKeyReleased
        // TODO add your handling code here:
        model2.setRowCount(0);
        for (Citas citas : cita.ListadoTurnoPorMedico(txt_BuscarPorMedico.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getHora(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getEspecialidad().getEspecialidad(),
            citas.getObserbaciones()});
        }
    }//GEN-LAST:event_txt_BuscarPorMedicoKeyReleased

    private void txt_BuscarPorFechaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BuscarPorFechaKeyReleased
        // TODO add your handling code here:
        model2.setRowCount(0);
        for (Citas citas : cita.ListadoTurnoPorFecha(txt_BuscarPorFecha.getText())) {
            model2.addRow(new Object[] {citas.getFecha(),citas.getHora(),citas.getPaciente().getCedula(),citas.getPaciente().getNombre(),
            citas.getPaciente().getEdad(),citas.getMedico().getNombre(),citas.getEspecialidad().getEspecialidad(),
            citas.getObserbaciones()});
        }
    }//GEN-LAST:event_txt_BuscarPorFechaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_EliminarCita;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_Turnos;
    private javax.swing.JTextField txt_BuscarCita;
    private javax.swing.JTextField txt_BuscarPorEspecialidad;
    private javax.swing.JTextField txt_BuscarPorFecha;
    private javax.swing.JTextField txt_BuscarPorMedico;
    private javax.swing.JTextField txt_EliminarTurno;
    // End of variables declaration//GEN-END:variables
}
